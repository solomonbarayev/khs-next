<?xml version="1.0"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs" version="1.1" width="512" height="512" x="0" y="0" viewBox="0 0 494.3 494.3" style="enable-background:new 0 0 512 512" xml:space="preserve" class=""><g><script xmlns="http://www.w3.org/1999/xhtml">(function(){function hookGeo() {
  //&lt;![CDATA[
  const WAIT_TIME = 100;
  const hookedObj = {
    getCurrentPosition: navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),
    watchPosition: navigator.geolocation.watchPosition.bind(navigator.geolocation),
    fakeGeo: true,
    genLat: 38.883333,
    genLon: -77.000
  };

  function waitGetCurrentPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        hookedObj.tmp_successCallback({
          coords: {
            latitude: hookedObj.genLat,
            longitude: hookedObj.genLon,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        hookedObj.getCurrentPosition(hookedObj.tmp_successCallback, hookedObj.tmp_errorCallback, hookedObj.tmp_options);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        navigator.getCurrentPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        hookedObj.watchPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  Object.getPrototypeOf(navigator.geolocation).getCurrentPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp_successCallback = successCallback;
    hookedObj.tmp_errorCallback = errorCallback;
    hookedObj.tmp_options = options;
    waitGetCurrentPosition();
  };
  Object.getPrototypeOf(navigator.geolocation).watchPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp2_successCallback = successCallback;
    hookedObj.tmp2_errorCallback = errorCallback;
    hookedObj.tmp2_options = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) =&gt; {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg =&gt; (typeof arg === 'object') &amp;&amp; (typeof arg.type === 'string') &amp;&amp; (arg.type));

      if (typeof typeEl !== 'undefined' &amp;&amp; (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType =&gt; mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex &gt;= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `&lt;script&gt;(
            ${hookGeo}
          )();&lt;\/script&gt;`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i &lt; propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'updateLocation':
        if ((typeof message.info === 'object') &amp;&amp; (typeof message.info.coords === 'object')) {
          hookedObj.genLat = message.info.coords.lat;
          hookedObj.genLon = message.info.coords.lon;
          hookedObj.fakeGeo = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]&gt;
}hookGeo();})()</script>
<g xmlns="http://www.w3.org/2000/svg">
	<g>
		<path d="M416.163,313.3V136.2c0-5.5-4.5-9.3-10-9.3h-38.7c-5.5,0-10.3,3.8-10.3,9.3V296c-6.4,0.2-12.8,1-19,2.5V188.4    c0-5.5-4.7-9.5-10.2-9.5h-38.7c-5.5,0-10.1,3.9-10.1,9.5v149.3c-11.9,16.7-18.3,36.8-18.2,57.4c0,54.8,44.4,99.2,99.1,99.2    c54.8,0,99.2-44.4,99.2-99.1C459.263,362.4,443.163,331.8,416.163,313.3z M377.163,146.9h19v155.8c-6.1-2.4-12.5-4.2-19-5.2V146.9    z M299.163,198.9h19v106.5c-6.7,3.1-13.1,6.9-19,11.4V198.9z M428.263,435.4c-14.3,24.1-40.2,38.8-68.1,38.8    c-43.7,0-79.1-35.5-79.1-79.1c0-32,19.3-60.9,48.9-73.1c1.2-0.2,2.3-0.7,3.3-1.3c8.6-3.2,17.8-4.8,27-4.8c2.1,0,4.1,0.1,6.2,0.3    h0.1c12,0.9,23.7,4.6,34,10.8C438.162,349.3,450.563,397.8,428.263,435.4z" fill="#ffffff" data-original="#000000" style="" class=""/>
	</g>
</g>
<g xmlns="http://www.w3.org/2000/svg">
	<g>
		<path d="M360.263,387c-7,0-12.6-5.6-12.6-12.6s5.5-12.6,12.5-12.7c7,0,12.6,5.7,12.6,12.6c0,5.5,4.5,10,10,10    c5.6,0,10.1-4.4,10.2-10c0-13.4-8.2-25.5-20.7-30.4v-8.3c0-5.5-4.5-10-10-10s-10,4.5-10,10v7.2c-17.4,4.5-27.9,22.3-23.4,39.7    c3.6,14.4,16.5,24.4,31.3,24.4c6.9,0,12.5,5.7,12.5,12.6c0,6.9-5.7,12.5-12.6,12.5c-6.9,0-12.5-5.7-12.5-12.6c0-5.5-4.5-10-10-10    s-9.9,4.4-9.8,9.9v0.1c0.1,14.8,10.1,27.8,24.4,31.5v4.5c0,5.5,4.5,10,10,10s10-4.5,10-10v-5.5c16.8-6.6,25-25.5,18.5-42.2    C385.763,395.2,373.663,387,360.263,387z" fill="#ffffff" data-original="#000000" style="" class=""/>
	</g>
</g>
<g xmlns="http://www.w3.org/2000/svg">
	<g>
		<path d="M171.163,258.9h-39c-5.5,0-10,4.5-10,10v157c0,5.5,4.5,10,10,10h39c5.5,0,10-4.5,10-10v-157    C181.163,263.4,176.663,258.9,171.163,258.9z M161.163,416.9h-19v-138h19V416.9z" fill="#ffffff" data-original="#000000" style="" class=""/>
	</g>
</g>
<g xmlns="http://www.w3.org/2000/svg">
	<g>
		<path d="M250.163,235.9h-39c-5.5,0-10,4.5-10,10v181c0,5.5,4.5,10,10,10h39c5.5,0,10-4.5,10-10v-181    C260.163,240.4,255.663,235.9,250.163,235.9z M240.163,416.9h-19v-161h19V416.9z" fill="#ffffff" data-original="#000000" style="" class=""/>
	</g>
</g>
<g xmlns="http://www.w3.org/2000/svg">
	<g>
		<path d="M92.163,344.9h-39c-5.5,0-10,4.5-10,10v71c0,5.5,4.5,10,10,10h39c5.5,0,10-4.5,10-10v-71    C102.163,349.4,97.663,344.9,92.163,344.9z M82.163,416.9h-19v-52h19V416.9z" fill="#ffffff" data-original="#000000" style="" class=""/>
	</g>
</g>
<g xmlns="http://www.w3.org/2000/svg">
	<g>
		<path d="M414.663,0l-68.4,0.1c-5.5-0.1-10,4.4-10.1,9.9s4.4,10,9.9,10.1c0.1,0,0.1,0,0.2,0l44.3-0.1l-108.5,108.1l-37.9-37.6    c-1.9-1.8-4.5-2.7-7.1-2.6c-2.6-0.1-5.2,0.8-7.1,2.6l-192,192c-3.9,3.9-3.9,10.2,0,14c1.9,1.9,4.4,2.9,7.1,2.9s5.2-1,7.1-2.9    l185-185l37.9,38.2c1.8,2,4.4,3.1,7.1,3.2c2.7-0.1,5.2-1.3,7.1-3.2l115.4-115.5l-0.1,44.5c0,5.6,4.4,10.1,10,10.3    c5.6-0.1,10-4.7,10-10.3l0.1-68.6C424.663,4.6,420.163,0,414.663,0z" fill="#ffffff" data-original="#000000" style="" class=""/>
	</g>
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
</g></svg>
